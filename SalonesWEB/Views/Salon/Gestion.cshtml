@model SalonesWEB.Models.Reservas.SalonesModel

@{
    ViewData["Title"] = "Gestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br />  <br />
<h3>@ViewData["Title"]</h3>


<div @*class="card o-hidden border-0 shadow-lg my-n2"*@>
    <div class="tab-content">
        <br />
        @* Persona *@
    <div class="tab-pane active" id="home1">
        <form asp-action="Gestion" class="row">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row" style="padding:15px;margin: 5px;">

                <div class="col-sm-3 mb-3 mb-sm-3" hidden>
                    @Html.Hidden("id")
                </div>
                <div class="col-sm-3 mb-3 mb-sm-3">
                    <label class="col-form-label" for="idPersonaCliente"><span style="color:red">*</span>Cliente</label>
                    @*<select class = "js-example-responsive form-control" id="idPersonaCliente" name="idPersonaCliente"></select>*@
                    @Html.DropDownList("idPersonaCliente", null, "Buscar Persona", htmlAttributes: new { @class = "js-example-responsive form-control", @required = "required", @style = "width: 100%;" })
                </div>
                <div class="col-sm-3 mb-3 mb-sm-3">
                    <label class="col-form-label" for="segundoNombre"><span style="color:red">*</span>Fecha Evento</label>
                    @Html.EditorFor(Model => Model.fechaEvento, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "Fecha Evento" } })
                </div>
                <div class="col-sm-3 mb-3 mb-sm-3">
                    <label class="col-form-label" for="primerApellido"><span style="color:red">*</span>Cantidad Persona</label>
                    @Html.EditorFor(Model => Model.cantidadPersona, new { htmlAttributes = new { @class = "form-control", @placeholder = "Cantidad Persona", @required = "required" } })
                </div>

                <div class="col-sm-3 mb-3 mb-sm-3">
                    <label class="col-form-label" for="idMotivo"><span style="color:red">*</span>Motivo</label>
                    @Html.DropDownList("idMotivo", null, "Seleccione Motivo", htmlAttributes: new { @class = "form-control collapse-inner", @required = "required" })
                </div>
                <div class="col-sm-3 mb-3 mb-sm-3">
                    <label class="col-form-label" for="Observación"><span style="color:red">*</span>Observación</label>
                    @Html.TextAreaFor(Model => Model.observacion, new {  @class = "form-control", @placeholder = "Observación", @row="4",@columns="10", @required = "required" })
                </div>
                <div class="col-sm-3 mb-3 mb-sm-3">
                    <label class="col-form-label" for="btnCrear">.</label>
                    <button type="button" class="form-control btn-secondary" id="btnCrear" placeholder="Guardar" style="background: #4e73df;font-size:15px;color:white;">Guardar</button>
                    <div>
                        <a asp-action="GetSalones">Back to List</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
    </div>
</div>

<script>
    var api = localStorage.getItem("api");
    var update = false;
    var id = parseInt('@ViewBag.idString');

    $(document).ready(function () {
        $(".collapse-inner").select2();
        debugger
        if (id != "" && id != undefined && id>0) {
            update = true;
        }
        $('.datepicker').datetimepicker({
            format: 'yyyy-MM-DD HH:mm:ss'// formato de la base de datos
        });
    });

    $("#btnCrear").click(function () {
        var fechaEvento = $("#fechaEvento").val();
        debugger
        if ($("#id").val() != undefined && $("#id").val()!="") {
            id = $("#id").val();
        }
        var entidad = {
            id: parseInt(id),
            idPersonaCliente: parseInt($("#idPersonaCliente").val()),
            fechaEvento: fechaEvento,
            cantidadPersona: parseInt($("#cantidadPersona").val()),
            idMotivo: parseInt($("#idMotivo").val()),
            observacion: $("#observacion").val(),
            estado:false
        }
            debugger
        if (update == false) {
            $.ajax({
                url: `${api}/api/Salones/CreateReservaSalon`,
                type: 'POST',
                contentType: "application/json; charset=utf-8",
                dataType: 'JSON',
                cache: false,
                traditional: true,
                async: true,
                data: JSON.stringify(entidad),
                header: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function (response) {
                    debugger
                    if (response.ok) {
                        toastr.success(response.mensaje);
                    } else {
                        toastr.warning(response.mensaje);
                    }
                },
                error: function (data) {

                   toastr.error("No pudimos completar tu solicitud!");
                }
            });
        }
        else if (id != "" && id != undefined && id != NaN) {
            debugger
            $.ajax({
                url: `${api}/api/Salones/ActualizarReservaSalon`,
                type: 'PUT',
                contentType: "application/json; charset=utf-8",
                dataType: 'JSON',
                cache: false,
                traditional: true,
                async: true,
                data: JSON.stringify(entidad),
                header: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function (ok) {
                    if (ok) {
                        toastr.success("success");
                    } else {
                        toastr.warning(ok.mensaje);
                    }
                },
                error: function (data) {
                    toastr.error("No pudimos completar tu solicitud!");
                }
            });
        }
        else {
            toastr.warning("selecciona una accion!");
        }
    });

    $('#idPersonaCliente').select2({
        ajax: {
            url: `${api}/api/Personas/GetPersonasDropList`,
            cache: false,
            tags: "true",
            placeholder: "Select an option",
            allowClear: true,
            width: 'resolve',
            data: function (params) {
                var query = {
                    buscar: params.term,
                    page: params.page || 1
                }
                return query;
            },
            processResults: function (data, params) {
                 return {
                    "results": data,
                    "pagination": {
                        "more": false
                    }
                }
            }
        }
    });

</script>
